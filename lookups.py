def multGF256(p_1,p_2): #Russian Peasant Algorithm from https://en.wikipedia.org/wiki/Finite_field_arithmetic#Program_examples
    product = 0x0
    while (p_1 and p_2):
        if p_2 & 0x1:
            product = product^p_1
        if p_1 & 0x80:
            p_1 = (p_1 << 1)^0x11B
        else:
            p_1 = p_1 << 1
        p_2 = p_2 >> 1
    return product

#roundLookup = {
#    32 : 10,
#    48 : 12,
#    64 : 14,
#}

sBox = {
    0: 99, 1: 124, 2: 119, 3: 123, 4: 242, 5: 107, 6: 111, 7: 197, 8: 48, 9: 1, 10: 103, 11: 43, 12: 254, 13: 215, 14: 171, 15: 118,
    16: 202, 17: 130, 18: 201, 19: 125, 20: 250, 21: 89, 22: 71, 23: 240, 24: 173, 25: 212, 26: 162, 27: 175, 28: 156, 29: 164, 30: 114, 31: 192,
    32: 183, 33: 253, 34: 147, 35: 38, 36: 54, 37: 63, 38: 247, 39: 204, 40: 52, 41: 165, 42: 229, 43: 241, 44: 113, 45: 216, 46: 49, 47: 21,
    48: 4, 49: 199, 50: 35, 51: 195, 52: 24, 53: 150, 54: 5, 55: 154, 56: 7, 57: 18, 58: 128, 59: 226, 60: 235, 61: 39, 62: 178, 63: 117,
    64: 9, 65: 131, 66: 44, 67: 26, 68: 27, 69: 110, 70: 90, 71: 160, 72: 82, 73: 59, 74: 214, 75: 179, 76: 41, 77: 227, 78: 47, 79: 132,
    80: 83, 81: 209, 82: 0, 83: 237, 84: 32, 85: 252, 86: 177, 87: 91, 88: 106, 89: 203, 90: 190, 91: 57, 92: 74, 93: 76, 94: 88, 95: 207,
    96: 208, 97: 239, 98: 170, 99: 251, 100: 67, 101: 77, 102: 51, 103: 133, 104: 69, 105: 249, 106: 2, 107: 127, 108: 80, 109: 60, 110: 159, 111: 168,
    112: 81, 113: 163, 114: 64, 115: 143, 116: 146, 117: 157, 118: 56, 119: 245, 120: 188, 121: 182, 122: 218, 123: 33, 124: 16, 125: 255, 126: 243, 127: 210,
    128: 205, 129: 12, 130: 19, 131: 236, 132: 95, 133: 151, 134: 68, 135: 23, 136: 196, 137: 167, 138: 126, 139: 61, 140: 100, 141: 93, 142: 25, 143: 115,
    144: 96, 145: 129, 146: 79, 147: 220, 148: 34, 149: 42, 150: 144, 151: 136, 152: 70, 153: 238, 154: 184, 155: 20, 156: 222, 157: 94, 158: 11, 159: 219,
    160: 224, 161: 50, 162: 58, 163: 10, 164: 73, 165: 6, 166: 36, 167: 92, 168: 194, 169: 211, 170: 172, 171: 98, 172: 145, 173: 149, 174: 228, 175: 121,
    176: 231, 177: 200, 178: 55, 179: 109, 180: 141, 181: 213, 182: 78, 183: 169, 184: 108, 185: 86, 186: 244, 187: 234, 188: 101, 189: 122, 190: 174, 191: 8,
    192: 186, 193: 120, 194: 37, 195: 46, 196: 28, 197: 166, 198: 180, 199: 198, 200: 232, 201: 221, 202: 116, 203: 31, 204: 75, 205: 189, 206: 139, 207: 138,
    208: 112, 209: 62, 210: 181, 211: 102, 212: 72, 213: 3, 214: 246, 215: 14, 216: 97, 217: 53, 218: 87, 219: 185, 220: 134, 221: 193, 222: 29, 223: 158,
    224: 225, 225: 248, 226: 152, 227: 17, 228: 105, 229: 217, 230: 142, 231: 148, 232: 155, 233: 30, 234: 135, 235: 233, 236: 206, 237: 85, 238: 40, 239: 223,
    240: 140, 241: 161, 242: 137, 243: 13, 244: 191, 245: 230, 246: 66, 247: 104, 248: 65, 249: 153, 250: 45, 251: 15, 252: 176, 253: 84, 254: 187, 255: 22
    }

#sBox = {
#    0: "63", 1: "7C", 2: "77", 3: "7B", 4: "F2", 5: "6B", 6: "6F", 7: "C5", 8: "30", 9: "01", 10: "67", 11: "2B", 12: "FE", 13: "D7", 14: "AB", 15: "76",
#    16: "CA", 17: "82", 18: "C9", 19: "7D", 20: "FA", 21: "59", 22: "47", 23: "F0", 24: "AD", 25: "D4", 26: "A2", 27: "AF", 28: "9C", 29: "A4", 30: "72", 31: "C0",
#    32: "B7", 33: "FD", 34: "93", 35: "26", 36: "36", 37: "3F", 38: "F7", 39: "CC", 40: "34", 41: "A5", 42: "E5", 43: "F1", 44: "71", 45: "D8", 46: "31", 47: "15",
#    48: "04", 49: "C7", 50: "23", 51: "C3", 52: "18", 53: "96", 54: "05", 55: "9A", 56: "07", 57: "12", 58: "80", 59: "E2", 60: "EB", 61: "27", 62: "B2", 63: "75",
#    64: "09", 65: "83", 66: "2C", 67: "1A", 68: "1B", 69: "6E", 70: "5A", 71: "A0", 72: "52", 73: "3B", 74: "D6", 75: "B3", 76: "29", 77: "E3", 78: "2F", 79: "84",
#    80: "53", 81: "D1", 82: "00", 83: "ED", 84: "20", 85: "FC", 86: "B1", 87: "5B", 88: "6A", 89: "CB", 90: "BE", 91: "39", 92: "4A", 93: "4C", 94: "58", 95: "CF",
#    96: "D0", 97: "EF", 98: "AA", 99: "FB", 100: "43", 101: "4D", 102: "33", 103: "85", 104: "45", 105: "F9", 106: "02", 107: "7F", 108: "50", 109: "3C", 110: "9F", 111: "A8",
#    112: "51", 113: "A3", 114: "40", 115: "8F", 116: "92", 117: "9D", 118: "38", 119: "F5", 120: "BC", 121: "B6", 122: "DA", 123: "21", 124: "10", 125: "FF", 126: "F3", 127: "D2",
#    128: "CD", 129: "0C", 130: "13", 131: "EC", 132: "5F", 133: "97", 134: "44", 135: "17", 136: "C4", 137: "A7", 138: "7E", 139: "3D", 140: "64", 141: "5D", 142: "19", 143: "73",
#    144: "60", 145: "81", 146: "4F", 147: "DC", 148: "22", 149: "2A", 150: "90", 151: "88", 152: "46", 153: "EE", 154: "B8", 155: "14", 156: "DE", 157: "5E", 158: "0B", 159: "DB",
#    160: "E0", 161: "32", 162: "3A", 163: "0A", 164: "49", 165: "06", 166: "24", 167: "5C", 168: "C2", 169: "D3", 170: "AC", 171: "62", 172: "91", 173: "95", 174: "E4", 175: "79",
#    176: "E7", 177: "C8", 178: "37", 179: "6D", 180: "8D", 181: "D5", 182: "4E", 183: "A9", 184: "6C", 185: "56", 186: "F4", 187: "EA", 188: "65", 189: "7A", 190: "AE", 191: "08",
#    192: "BA", 193: "78", 194: "25", 195: "2E", 196: "1C", 197: "A6", 198: "B4", 199: "C6", 200: "E8", 201: "DD", 202: "74", 203: "1F", 204: "4B", 205: "BD", 206: "8B", 207: "8A",
#    208: "70", 209: "3E", 210: "B5", 211: "66", 212: "48", 213: "03", 214: "F6", 215: "0E", 216: "61", 217: "35", 218: "57", 219: "B9", 220: "86", 221: "C1", 222: "1D", 223: "9E",
#    224: "E1", 225: "F8", 226: "98", 227: "11", 228: "69", 229: "D9", 230: "8E", 231: "94", 232: "9B", 233: "1E", 234: "87", 235: "E9", 236: "CE", 237: "55", 238: "28", 239: "DF",
#    240: "8C", 241: "A1", 242: "89", 243: "0D", 244: "BF", 245: "E6", 246: "42", 247: "68", 248: "41", 249: "99", 250: "2D", 251: "0F", 252: "B0", 253: "54", 254: "BB", 255: "16"
#    }


multTable = {(p_1,p_2) : multGF256(p_1,p_2) for p_1 in range(0x2,0x4) for p_2 in range(0x100)}
